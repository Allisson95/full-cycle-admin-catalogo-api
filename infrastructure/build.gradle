buildscript {
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:10.13.0'
    }
}

plugins {
    id('java-conventions')
    id('jacoco-report-aggregation')
    id('application')
    id('org.springframework.boot') version '2.7.18'
    id('io.spring.dependency-management') version '1.1.5'
    id('org.flywaydb.flyway') version '10.13.0'
}

group 'com.github.allisson95.codeflix.infrastructure'

dependencies {
    implementation project(':domain')
    implementation project(':application')

    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation platform('org.testcontainers:testcontainers-bom:1.19.8')

    implementation 'com.google.cloud:google-cloud-storage:2.38.0'
    implementation 'com.google.guava:guava:33.2.0-jre'

    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.8.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    testImplementation project(path: ':domain', configuration: 'testClasses')

    testImplementation 'org.flywaydb:flyway-core'
    testImplementation 'org.flywaydb:flyway-mysql'

    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'org.testcontainers:junit-jupiter'

    testImplementation 'org.springframework.amqp:spring-rabbit-test:2.4.17'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testRuntimeOnly 'com.h2database:h2'
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://db:3306/admin_catalogo'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: 'root'
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}

tasks.named('bootJar') {
    archiveName 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}
