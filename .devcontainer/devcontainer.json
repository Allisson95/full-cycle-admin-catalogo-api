// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "Admin Catalogo API",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yml",
		"docker-compose.yml"
	],

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {}
	},

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "app",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": { 
				"[java]": {
					"editor.detectIndentation": false,
					"editor.insertSpaces": true,
					"editor.tabSize": 4
				},
				"java.codeGeneration.hashCodeEquals.useJava7Objects": true,
				"java.compile.nullAnalysis.mode": "automatic",
				"java.completion.favoriteStaticMembers": [
					"org.hamcrest.Matchers.*",
					"org.hamcrest.MatcherAssert.*",
					"org.junit.jupiter.api.Assertions.*",
					"org.junit.jupiter.api.Assumptions.*",
					"org.junit.jupiter.api.DynamicContainer.*",
					"org.junit.jupiter.api.DynamicTest.*",
					"org.mockito.Mockito.*",
					"org.mockito.ArgumentMatchers.*",
					"org.mockito.Answers.*",
					"org.mockito.AdditionalAnswers.*",
					"org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*",
					"org.springframework.test.web.servlet.result.MockMvcResultHandlers.*",
					"org.springframework.test.web.servlet.result.MockMvcResultMatchers.*",
					"io.vavr.API.*"
				],
				"java.configuration.runtimes": [
					{
						"name": "JavaSE-17",
						"path": "/usr/lib/jvm/msopenjdk-current",
						"sources": "/usr/lib/jvm/msopenjdk-current/lib/src.zip",
						"javadoc": "https://docs.oracle.com/en/java/javase/17/docs/api/",
						"default": true
					}
				],
				"java.configuration.updateBuildConfiguration": "automatic",
				"java.dependency.packagePresentation": "hierarchical",
				"java.signatureHelp.description.enabled": true
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"vscjava.vscode-java-pack",
				"vscjava.vscode-gradle",
				"vmware.vscode-boot-dev-pack",
				"redhat.vscode-xml",
				"redhat.vscode-yaml",
				"sonarsource.sonarlint-vscode",
				"eamodio.gitlens"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	"shutdownAction": "stopCompose",

	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cat /etc/os-release",

	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "vscode"
}
